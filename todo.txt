НАДО СДЕЛАТЬ
1. пагинация
2. регулярка для постов (посмотреть плагины для ввода тегов)
3. прочитать про функции немедленного вызова
6. Хотелось бы со страницы пользователя не только смотреть все его посты, но и там же иметь кнопки редактирования и удаления, а не только на странице самого поста 
7. Очень хотелось бы на странице Articles видеть свой новодобавленный пост, а не только по Hello, User и Recent Posts 
8. изменить таблицу с тегами сделать одну
10. когда нажимаешь на комментарий, осуществляется прокрутка вверх и чтобы пользовательне забыл, кому адресовал свой пост, то пишем кому он отвечает в текущий момент
11. окно confirm при удалении комментария
12. перевести все комментарии на английский язык
13. сделать так чтобы в sessionStorage записывался только user login и user id
14. сделать стиль для user1 to user2
15. обработка ошибок во всех функциях
16. разобраться с тегами: сделать плагин

+СДЕЛАНО
+1. Хэширование пароля.
+2. Проверка введённых данных.
+3. Создание поста.
+4. Решить вопрос с тегами.
+6. Просмотр поста кратко.
+8. Написать функцию для очистки LocalStorage после закрытия браузера.
+9. Узнать разницу между LocalStorage и SessionStorage.
+10. Просмотр поста подробно.
+12. Научиться адекватно выводить информацию о посте краткую.
+13. Сделать переход на подробный пост по щелчке на заголовок.
+18. Сделать нормальный переход на новые странице с возможностью обратного возвращения на предыдущую страницу.
+19. Исправить ошибку вывода автора в посте.
+20. Подкорректировать посты, чтобы не было их в SS.
+21. при нажатии на пост - открывается страничка и в нем заголовок поста по центру картинки
+22. при открытии отдельного поста - другой дизайн
+23. модальное окно регистрации
+24. модальное окно авторизации
+25. при входе на сайт - меняет меню: hello, username!, logout
+26. внешний вид окна создания поста
ФОТО
+27. Загрузка фото и запись пути к фото в БД.
+28. Просмотр фото на странице о посте кратко.
+29. Просмотр фото на странице о посте подробно.

+30. Регистрация/авторизация в модальном окне.
+31. Проверить postId/userId во всех файлах.
+32. вставить в логотип картинку
+33. в футере изменить иконки социальных сетей
+34. удаление поста
+35. уведомление о том что пост добавлен
+36. внешний вид комментариев
+37. если чел зашел на сайт, то к посту появляется форма - оставить коммент
+38. внешний вид окна личный кабинет
+39. сделать фичу количества комментариев где все посты
+40. сделать добавление картинки по умолчанию, если она не была добавлена пользователем
+41. сделать вывод окончания в комментариях в зависимости от их количества
+42. если комментариев нет, то в блоке пишется - нет комментариев. стань первым!
+43. редактирование поста
+44. кнопка вверх на все страницы!
+45. подключить шрифты
+46. сделать боковые кнопки социальных сетей ?????
+47. фильтрация постов в личном кабинете
+48. отображение кнопок редактирование и удаление в личном кабинете
+55. logout сделать
+57. вернуться к vue tree с комментариями
+59. удаление комментариев
+54. вывод популярных тегов на главной странице
+49. сделать email уникальным вместо логина
+50. проверка есть ли такой емаил (чтобы не было)
+58. добавление комментария
+63. сделать вместо indexAcconut index
+3. Лучше после обновления страницы с This comment has been removed. убирать комментарий, но мне нравится эта фича, не исправляй!!!
+64. сделать одну страницу для create/edit post
+1. можно при регистрации просить повторить пароль
+4. При нажатии на Cancel редактирования, оно должно редиректить меня назад
+8. Хотелось бы при клике на картинку поста переходить на страницу поста с Articles
+11. После удаления моего поста меня редиректит на страницу ошибки
+12. После logout`а я почему-то могу видеть страницу создания поста и меня не редиректунало на главную страницу Articles
+5. При редактировании текстовых полей поста картинка становится дефолтной
+9. если постов нет, то в личном кабинете пишется о том, что постов нет
+4. кто кому ответил в комментариях
+5. узнать у Михаила про появляющиеся ошибки после нажатия на logout

+ДОБАВЛЕНИЕ ПОСТА (в частности тега):
+1. Пользователь вводит ЛЮБЫЕ теги через запятую.
+2. Мы считываем строку в переменную в js.
+3. Мы разделяем строку на массив слов (тегов).
+4. Записываем каждый тег в таблицу postsTags(...).

+ЛОГИКА ПРОСМОТРА ПОСТА ПОДРОБНО
+1.Пользователь на странице с несколькими постами. В SessionStorage хранится массив с информацией обо всех постах.
+2.Пользователь нажимает на заголовок поста.
+3.Мы должны как-то узнать заголовок, по которому был произведен щелчок мыши.
+4.Найти в массиве SessionStorage информацию о новости.
+5.Найти автора новости:
    +сделать запрос ко конкретному автору
    +проверить что вернулось в объекте
    +запомнить автора в переменную
+6.Вывести всю информацию на страницу через post вместе с именем автора.

ЛОГИКА ОТОБРАЖЕНИЯ ТЕГОВ
+популярность тега определяется по количеству встречаемости этого тега в постах
+то есть становится популярным тогда, когда сравнивается кол - во встречаемость этого тега во всех постах
+1. сначала сколько раз тег встречался
+2. сортировка от наибольшей встречаемости до наименьшей
+3. обрезается ассоциативный массив(тег, кол - во встречаемости)
+4. то есть исходя из сортировки вверху будут макс встречаемость, а внизу наоборот
+5. обрезаем первых 10 тегов и их выводим

ВХОД НА САЙТ:
пользователь заходит на стр индекс
если гость - смотрит посты
если юзер - меняется меню

ФАЙЛЫ:
allPosts.html - выводит ВСЕ посты из БД
allPostsJS.js - скрипт для allPosts.html

onePost.html - информация об одном посте
onePostJS.js - скрипт для onePost.html

СТРУКТУРА:
Главная страница:
    -посты с пагинацией
    -вверху кнопка войти/зарегистрироваться, а когда вошёл должна быть кнопка "Добавить пост"
    -просмотр тегов
    
Просмотр поста:
    -кнопка удаления (ДЛЯ ЗАРЕГИСТРИРОВАННЫХ)
    -кнопка редактирования (ДЛЯ ЗАРЕГИСТРИРОВАННЫХ)
    -возможность комментирования